set nocompatible
filetype plugin indent on
set noswapfile

set hlsearch
set rnu
set nu
set hidden
set scrolloff=5
set ignorecase ""needed for smartcase to work
set smartcase
set incsearch

syntax on
set expandtab
set tabstop=4
set shiftwidth=4
set backspace=indent,eol,start

let mapleader=" "
noremap \ ,
noremap <Leader>n :NERDTreeToggle<CR>
noremap <Leader><Leader>n :cd %:h<CR>:NERDTreeToggle<CR>


""disable the  arrow keys
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

""clear search highlighting
nnoremap <CR> :noh<CR><CR>


autocmd FileType java call s:ConfigureEclimJavaBindings()

function s:ConfigureEclimJavaBindings()
    nnoremap <silent> <buffer><leader>i :JavaImport<CR>
    nnoremap <silent> <buffer><leader>d :JavaDocSearch -x declarations<CR>
    nnoremap <silent> <buffer><CR> :JavaSearchContext<CR>
    nnoremap <silent> <buffer><leader>jgs :JavaGetSet<CR>
    nnoremap <silent> <buffer><leader>ju :JUnit<CR>
    nnoremap <silent> <buffer><leader>jc :JavaCorrect<CR>
endfunction

let g:UltiSnipsExpandTrigger="<C-e>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"


function s:PluginsMissing()
    for spec in values(g:plugs)
        if !isdirectory(spec.dir)
            return 1
        endif
    endfor

    return 0
endfunction

if !filereadable(expand('~/.vim/autoload/plug.vim'))
    echo "Installing Vim Plug.."
    echo ""
    silent !mkdir --parents ~/.vim/autoload
    silent !curl --fail --location --output ~/.vim/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree'
Plug 'kien/ctrlp.vim'
Plug 'Valloric/YouCompleteMe', { 'do': './install.sh' }
Plug 'https://github.com/SirVer/ultisnips.git' 
Plug 'https://github.com/honza/vim-snippets.git'
Plug 'https://github.com/OmniSharp/omnisharp-vim'
Plug 'https://github.com/scrooloose/syntastic'

if s:PluginsMissing()
    PlugInstall
endif

call plug#helptags()
call plug#end()

set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/
" Always show statusline
 set laststatus=2
"
" " Use 256 colours (Use this setting only if your terminal supports 256
" colours)
 set t_Co=256

let NERDTreeIgnore = ['\.meta$']
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol = "âœ—"
let g:syntastic_cs_checkers = ['syntax', 'semantic', 'errors']
let g:syntastic_html_checkers = ['validator']
let g:syntastic_javascript_checkers = ['jshint']
let g:syntastic_enable_balloons = 1
